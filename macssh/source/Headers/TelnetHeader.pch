// BetterTelnet

// BEFORE YOU COMPILE...
// If you are using CW10 or CW11, don't change a thing. It will compile right out of the box.
// If you are using CWPro1, you will only need to change the libraries. (see below)

// NOTICE: As of BetterTelnet 2.0fc1, OLDROUTINENAMES is now globally #defined as 0.
// This means that you MUST use the new routine names.

// If you are using CWPro2, CWPro3 or later, uncomment the line below
#define BT_CWPRO2 1

// If you are using CWPro(1|2|3) or later, you will have to remove the ANSI library from the
// Libraries segment and add the MSL (Metrowerks Standard Library) instead. See the
// conversion notes for extra info.

// If you are using a CodeWarrior version PRIOR to CW10, compilation is not guaranteed,
// but it might work. You may need to roll your own project file to do this.

// If you are using MPW or (God forbid) Symantec C++, major changes may be needed. You can
// ask me (Rolf) for compile help, but I can't guarantee that I'll be able to provide you
// with any. If you are using the latest MPW, I'd advise #defining BT_CWPRO2 1 since that
// makes BT do what the newer Universal Headers expect.

// That's it. Report compile errors to the author.

/*#include "ansi_prefix.nonamespace.h"*/
#include <ansi_prefix.mac.h>

#ifdef __cplusplus
/*
 #ifdef powerc
  #pragma precompile_target "TelnetHeaderPPC++"
 #else
  #pragma precompile_target "TelnetHeader68K++"
 #endif
*/
#else
 #ifdef powerc
  #pragma precompile_target "TelnetHeaderPPC"
 #else
  #pragma precompile_target "TelnetHeader68K"
 #endif
#endif

#include <ConditionalMacros.h>
#ifdef OLDROUTINENAMES
#undef OLDROUTINENAMES
#endif
#define OLDROUTINENAMES 0

#ifdef BT_CWPRO2
#define DELAYLONG unsigned long
#else
#define DELAYLONG long
#endif

#include "MacHeaders.c"
#include <PLStringFuncs.h>
#include "Palettes.h"
#include "TelnetHeader.h"
#include "dialog_resrcdefs.h"
#include "general_resrcdefs.h"
#include "menu_resrcdefs.h"
#include "string_resrcdefs.h"
#include "telnetdebug.h"
#include "memory.proto.h"
#include <string.h>
#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>

enum {
	inLabel						= 1,
	inMenu						= 2,
	inTriangle					= 4,
	inButton					= 10,
	inCheckBox					= 11,
	inUpButton					= 20,
	inDownButton				= 21,
	inPageUp					= 22,
	inPageDown					= 23,
	inThumb						= 129
};

